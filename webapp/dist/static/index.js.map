{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./static/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Highcharts","getJSON","data","countiesMap","geojson","maps","lines","borderLines","grep","properties","separatorLines","each","mapPoint","substr","document","getElementById","innerHTML","setTimeout","mapChart","chart","borderWidth","marginRight","title","text","legend","layout","align","floating","backgroundColor","defaultOptions","mapNavigation","enabled","colorAxis","min","max","tickInterval","stops","labels","format","plotOptions","mapline","showInLegend","enableMouseTracking","series","mapData","joinBy","tooltip","valueSuffix","states","hover","color","shadow","type"],"mappings":"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","file":"static/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","Highcharts.getJSON(\n  '/county/map.json',\n  function (data) {\n\n      /**\n       * Data parsed from http://www.bls.gov/lau/#tables\n       *\n       * 1. Go to http://www.bls.gov/lau/laucntycur14.txt (or similar, updated\n       *    datasets)\n       * 2. In the Chrome Developer tools console, run this code:\n       *    copy(JSON.stringify(document.body.innerHTML.split('\\n').filter(function (s) { return s.indexOf('<PUT DATE HERE IN FORMAT e.g. Feb-14>') !== -1; }).map(function (row) { row = row.split('|'); return { code: 'us-' + row[3].trim().slice(-2).toLowerCase() + '-' + row[2].trim(), name: row[3].trim(), value: parseFloat(row[8]) }; })))\n       * 3. The data is now on your clipboard, paste it below\n       * 4. Verify that the length of the data is reasonable, about 3300\n       *    counties.\n       */\n\n      var countiesMap = Highcharts.geojson(\n              Highcharts.maps['countries/us/us-all-all']\n          ),\n          // Extract the line paths from the GeoJSON\n          lines = Highcharts.geojson(\n              Highcharts.maps['countries/us/us-all-all'], 'mapline'\n          ),\n          // Filter out the state borders and separator lines, we want these\n          // in separate series\n          borderLines = Highcharts.grep(lines, function (l) {\n              return l.properties['hc-group'] === '__border_lines__';\n          }),\n          separatorLines = Highcharts.grep(lines, function (l) {\n              return l.properties['hc-group'] === '__separator_lines__';\n          });\n\n      // Add state acronym for tooltip\n      Highcharts.each(countiesMap, function (mapPoint) {\n          mapPoint.name = mapPoint.name + ', ' +\n              mapPoint.properties['hc-key'].substr(3, 2);\n      });\n\n      document.getElementById('container').innerHTML = 'Rendering map...';\n\n      // Create the map\n      setTimeout(function () { // Otherwise innerHTML doesn't update\n          Highcharts.mapChart('container', {\n              chart: {\n                  borderWidth: 1,\n                  marginRight: 20 // for the legend\n              },\n\n              title: {\n                  text: 'COVID-19 cases by counties in US'\n              },\n\n              legend: {\n                  layout: 'vertical',\n                  align: 'right',\n                  floating: true,\n                  backgroundColor: ( // theme\n                      Highcharts.defaultOptions &&\n                      Highcharts.defaultOptions.legend &&\n                      Highcharts.defaultOptions.legend.backgroundColor\n                  ) || 'rgba(255, 255, 255, 0.85)'\n              },\n\n              mapNavigation: {\n                  enabled: true\n              },\n\n              colorAxis: {\n                  min: 0,\n                  max: 100,\n                  tickInterval: 10,\n                  stops: [[0, '#F1EEF6'], [0.65, '#900037'], [1, '#500007']],\n                  labels: {\n                      format: '{value}+ cases'\n                  }\n              },\n\n              plotOptions: {\n                  mapline: {\n                      showInLegend: false,\n                      enableMouseTracking: false\n                  }\n              },\n\n              series: [{\n                  mapData: countiesMap,\n                  data: data,\n                  joinBy: ['fips', 'fips'],\n                  name: 'COVID-19 cases',\n                  tooltip: {\n                      valueSuffix: ''\n                  },\n                  borderWidth: 0.5,\n                  states: {\n                      hover: {\n                          color: '#a4edba'\n                      }\n                  },\n                  shadow: false\n              }, {\n                  type: 'mapline',\n                  name: 'State borders',\n                  data: borderLines,\n                  color: 'white',\n                  shadow: false\n              }, {\n                  type: 'mapline',\n                  name: 'Separator',\n                  data: separatorLines,\n                  color: 'gray',\n                  shadow: false\n              }]\n          });\n      }, 0);\n  }\n);"],"sourceRoot":""}